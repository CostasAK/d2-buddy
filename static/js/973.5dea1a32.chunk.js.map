{"version":3,"file":"static/js/973.5dea1a32.chunk.js","mappings":"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","sources":["constants/time.js","functions/formatDateTime.js","functions/formatDuration.js","functions/isPast.js","functions/nextTime.js","functions/toTime.js","components/CycleCard/CycleCard.jsx","components/CycleCard/index.js","functions/getScreenshot.js","functions/getKeyByValue.js","functions/getWeaponElement.js","functions/getWeaponType.js","functions/tierToColor.js","components/DestinyWeapon.jsx","pages/Timers/AltarsOfSorrowWeapons.jsx","components/Activity/Activity.jsx","components/Activity/ActivityChampions.jsx","components/Activity/ActivityDestination.jsx","components/Activity/ActivityDifficulty.jsx","functions/getActivityType.js","components/Activity/ActivityHeader.jsx","components/Activity/ActivityModifier.jsx","functions/getKnownActivityAmounts.js","components/Activity/ActivityModifiers.jsx","components/Activity/ActivityShields.jsx","components/Activity/index.js","pages/Timers/CurrentNightfall.jsx","components/LostSector.jsx","functions/gcd.js","pages/Timers/LostSectors.jsx","pages/Timers/PsiOpsLegend.jsx","functions/capitalizeSentence.js","components/TimerCard/TimerCardCountdown.jsx","components/TimerCard/TimerCardDescriptionStyle.js","functions/getPeriodString.js","components/TimerCard/TimerCardDescription.jsx","components/TimerCard/TimerCard.jsx","components/TimerCard/index.js","pages/Timers/Season.jsx","pages/Timers/WellspringWeapons.jsx","pages/Timers/index.jsx"],"sourcesContent":["export const second = 1000;\nexport const minute = 60 * second;\nexport const hour = 60 * minute;\nexport const day = 24 * hour;\nexport const week = 7 * day;\nexport const month = 30 * day;\nexport const year = 365.25 * day;\n","import dayjs from \"dayjs\";\n\nexport function formatTime(time, include_time = true) {\n  if (!include_time) {\n    return formatDate(time, false);\n  }\n\n  const hourParts = new Intl.DateTimeFormat(undefined, {\n    hour: \"numeric\",\n  }).formatToParts(new Date(time));\n\n  if (hourParts.dayPeriod !== undefined) {\n    return dayjs(time).format(\"h:mm A\");\n  }\n  return dayjs(time).format(\"H:mm\");\n}\n\nexport function formatDate(time, include_time = true) {\n  return (\n    dayjs(time).format(\"ddd, D MMM YYYY\") +\n    (include_time ? \" \" + formatTime(time) : \"\")\n  );\n}\n","import { day, hour, minute, month, second, year } from \"../constants/time\";\n\nexport function formatDuration(duration) {\n  if (Math.abs(duration) < 0.75 * second) {\n    return \"now\";\n  }\n\n  const absolute_duration = formatAbsoluteDuration(duration);\n\n  return duration < 0 ? `${absolute_duration} ago` : `in ${absolute_duration}`;\n}\n\nexport function formatAbsoluteDuration(duration) {\n  const absolute_duration = Math.abs(duration);\n\n  if (absolute_duration < 1 * minute) {\n    return \"less than 1 minute\";\n  }\n\n  if (absolute_duration < 1.5 * minute) {\n    return \"1 minute\";\n  }\n\n  if (absolute_duration <= 57.5 * minute) {\n    return `${Math.round(absolute_duration / minute)} minutes`;\n  }\n\n  if (absolute_duration < 22 * hour) {\n    return `${\n      (absolute_duration % hour) / hour < 0.875\n        ? Math.floor(absolute_duration / hour)\n        : Math.ceil(absolute_duration / hour)\n    }${\n      (absolute_duration % hour) / hour < 0.125 ||\n      (absolute_duration % hour) / hour >= 0.875\n        ? \"\"\n        : (absolute_duration % hour) / hour < 0.375\n        ? \"¼\"\n        : (absolute_duration % hour) / hour < 0.625\n        ? \"½\"\n        : \"¾\"\n    } hour${absolute_duration < 1.875 * hour ? \"\" : \"s\"}`;\n  }\n\n  if (absolute_duration < 1.5 * day) {\n    return \"1 day\";\n  }\n\n  if (absolute_duration < 26 * day) {\n    return `${Math.round(absolute_duration / day)} days`;\n  }\n\n  if (absolute_duration < 46 * day) {\n    return \"1 month\";\n  }\n\n  if (absolute_duration < 11 * month) {\n    return `${Math.round(absolute_duration / month)} months`;\n  }\n\n  if (absolute_duration < 18 * month) {\n    return \"1 year\";\n  }\n\n  return `${Math.round(absolute_duration / year)} years`;\n}\n","export function isPast(time) {\n  return time && time <= Date.now();\n}\n","export function nextTime(period, time, now = Date.now() + 1000) {\n  if (!period || !time) {\n    return time;\n  }\n\n  now += 1000 - (now % 1000);\n  time -= time % 1000;\n\n  let offset = time % period;\n  let remainder = now % period || 0;\n  if (remainder < offset) {\n    return now - remainder + offset;\n  }\n  return now - remainder + offset + period;\n}\n","export function toTime(time) {\n  if (time) {\n    return new Date(time).getTime();\n  }\n  return false;\n}\n","import \"./style.scss\";\n\nimport { day, minute, year } from \"../../constants/time\";\nimport { formatDate, formatTime } from \"../../functions/formatDateTime\";\nimport { useEffect, useState } from \"react\";\n\nimport Card from \"../Card\";\nimport PropTypes from \"prop-types\";\nimport { formatDuration } from \"../../functions/formatDuration\";\nimport { isPast } from \"../../functions/isPast\";\nimport { nextTime } from \"../../functions/nextTime\";\nimport { toTime } from \"../../functions/toTime\";\n\nexport function CycleCard({ name, items, start, period, icon }) {\n  const [now, setNow] = useState(Date.now());\n  const [nextCycle, setNextCycle] = useState(nextTime(period, toTime(start)));\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(() => Date.now());\n      setNextCycle(() => nextTime(period, toTime(start)));\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [start, period, nextCycle, now]);\n\n  function absoluteTimeString(time, long = false) {\n    if (!long && isPast(time - day)) {\n      return formatTime(time);\n    }\n    return formatDate(time);\n  }\n\n  function timeString(time) {\n    let countdown = formatDuration(time - now);\n    if (isPast(time - day)) {\n      return countdown + \", at \" + absoluteTimeString(time);\n    }\n    return countdown + \", on \" + absoluteTimeString(time);\n  }\n\n  let flex_order = (nextCycle - 5 * year) / minute;\n\n  let current_item_index = Math.floor((now - start) / period) % items.length;\n\n  let short_description = (\n    <>\n      {items[current_item_index]}\n      {\"Cycles \" + timeString(nextCycle)}\n    </>\n  );\n\n  let long_description = (\n    <>\n      <section>{short_description}</section>\n      <section className=\"upcoming-items\">\n        <h3>Upcoming</h3>\n        {items.map((item, index) => {\n          const shifted_index =\n            (index - current_item_index + items.length - 1) % items.length;\n          return (\n            <section\n              key={index}\n              style={{\n                order: shifted_index,\n              }}\n            >\n              {item}\n              {absoluteTimeString(nextCycle + shifted_index * period, true)}\n            </section>\n          );\n        })}\n      </section>\n    </>\n  );\n\n  return (\n    <Card\n      className=\"cycle-card\"\n      title={name}\n      style={{ order: flex_order }}\n      modalContent={long_description}\n      icon={icon}\n    >\n      {short_description}\n    </Card>\n  );\n}\n\nCycleCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n  ).isRequired,\n  start: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  period: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nCycleCard.defaultProps = {\n  period: day,\n};\n","import { CycleCard } from \"./CycleCard\";\n\nexport default CycleCard;\n","const bungie_root_path = \"https://bungie.net\";\n\nexport function getScreenshot(data) {\n  const screenshot = data?.screenshot || data?.pgcrImage;\n  return screenshot ? bungie_root_path + screenshot : null;\n}\n","const getKeyByValue = (obj, value) =>\n  Object.keys(obj).find((key) => obj[key] === value);\n\nexport default getKeyByValue;\n","import { DamageType } from \"bungie-api-ts/destiny2\";\nimport getKeyByValue from \"./getKeyByValue\";\n\nfunction getWeaponElement(data) {\n  return getKeyByValue(DamageType, data?.defaultDamageType)?.replace(\n    /thermal/i,\n    \"Solar\"\n  );\n}\n\nexport default getWeaponElement;\n","import { DestinyAmmunitionType } from \"bungie-api-ts/destiny2\";\n\nfunction getWeaponType(data) {\n  let type = data?.itemTypeDisplayName;\n  if (\n    type === \"Grenade Launcher\" &&\n    DestinyAmmunitionType.Heavy === data?.equippingBlock?.ammoType\n  ) {\n    type = \"Heavy \" + type;\n  }\n  return type;\n}\n\nexport default getWeaponType;\n","const known_tiers = { Legendary: \"#4e3263\", Exotic: \"#cdad34\" };\n\nfunction tierToColor(tier) {\n  return known_tiers[tier] || \"#04040e\";\n}\n\nexport default tierToColor;\n","import \"./DestinyWeapon.scss\";\n\nimport DestinyIcon from \"./DestinyIcon\";\nimport Img from \"./Img\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport { getScreenshot } from \"../functions/getScreenshot\";\nimport getWeaponElement from \"../functions/getWeaponElement\";\nimport getWeaponType from \"../functions/getWeaponType\";\nimport tierToColor from \"../functions/tierToColor\";\nimport { useQuery } from \"react-query\";\n\nconst sites = [\n  {\n    name: \"DestinyTracker\",\n    url: \"https://destinytracker.com/destiny-2/db/items/\",\n    icon: \"https://cod.tracker.gg/public/icons/icon192.png\",\n  },\n  {\n    name: \"Gunsmith\",\n    url: \"https://d2gunsmith.com/w/\",\n    icon: \"https://d2gunsmith.com/favicon.ico\",\n  },\n  {\n    name: \"Light.gg\",\n    url: \"https://www.light.gg/db/en/items/\",\n    icon: \"https://www.light.gg/Content/Images/new-icon.png\",\n  },\n];\n\nfunction WeaponLinks({ id }) {\n  return (\n    <ul className=\"weapon-links\">\n      {sites.map((site) => (\n        <li key={site.name}>\n          <a\n            className=\"site-link\"\n            href={site.url + id}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {site.icon && <Img src={site.icon} className=\"site-icon\" />}\n            {site.name}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default function DestinyWeapon({ id, name }) {\n  let { data, error, isLoading } = useQuery([\n    \"DestinyInventoryItemDefinition\",\n    id,\n  ]);\n\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"destiny-weapon\">\n          <Loading size=\"inline\" /> {name && <span>{name}</span>}\n        </div>\n      </>\n    );\n  }\n\n  if (error) {\n    console.error(error);\n    return null;\n  }\n\n  name ||= data?.displayProperties?.name;\n\n  const type = getWeaponType(data);\n\n  const element = getWeaponElement(data);\n\n  const tier = data?.inventory?.tierTypeName;\n  const screenshot = getScreenshot(data);\n\n  return (\n    <Modal\n      triggerContent={\n        <div className=\"destiny-weapon a-link\">\n          <DestinyIcon icon={[\"weapons\", type]} color={element} />{\" \"}\n          <span>{name}</span>\n        </div>\n      }\n      tooltip={{\n        contents: `${tier} ${element} ${type}`,\n        backgroundColor: tierToColor(tier),\n      }}\n    >\n      <article className={\"weapon-modal \" + tier?.toLowerCase()}>\n        <div\n          className=\"weapon-screenshot\"\n          style={{ backgroundImage: `url(${screenshot})` }}\n        >\n          <WeaponLinks id={id} />\n        </div>\n        <div className=\"weapon-header\">\n          <Img src={data.displayProperties.icon} className=\"weapon-icon\" />\n          <div className=\"weapon-header-text\">\n            <h3>{name}</h3>\n            <p>\n              {tier} |{\" \"}\n              {<DestinyIcon icon={[\"elements\", element]} color={element} />}{\" \"}\n              {element} | {<DestinyIcon icon={[\"weapons\", type]} />} {type}\n            </p>\n          </div>\n        </div>\n      </article>\n    </Modal>\n  );\n}\n","import CycleCard from \"../../components/CycleCard\";\nimport DestinyWeapon from \"../../components/DestinyWeapon\";\nimport { day } from \"../../constants/time\";\n\nconst items = [\n  <DestinyWeapon id=\"2782847179\" name=\"Blasphemer\" />,\n  <DestinyWeapon id=\"2164448701\" name=\"Apostate\" />,\n  <DestinyWeapon id=\"3067821200\" name=\"Heretic\" />,\n];\n\nexport default function AltarsOfSorrowWeapons() {\n  return (\n    <CycleCard\n      name=\"Altars of Sorrow Weapon\"\n      items={items}\n      start={1648832400 * 1000}\n      period={day}\n      icon=\"https://www.bungie.net/common/destiny2_content/icons/58bf5b93ae8cfefc55852fe664179757.png\"\n    />\n  );\n}\n","import \"./style.scss\";\n\nimport { ActivityDifficulty, ActivityHeader, ActivityModifiers } from \".\";\nimport { Fragment, forwardRef } from \"react\";\n\nimport Loading from \"../Loading\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { useQueries } from \"react-query\";\n\nexport const Activity = forwardRef(({ id, dataArray, name }, ref) => {\n  const ids = id ? [].concat(id) : [];\n\n  let activities = useQueries(\n    ids.map((id) => {\n      return {\n        queryKey: [\"DestinyActivityDefinition\", id],\n      };\n    }),\n    { enabled: !!id }\n  );\n\n  if (!!id) {\n    if (!activities.every((activity) => activity.isSuccess)) {\n      if (activities.some((activity) => activity.isLoading))\n        return (\n          <>\n            <article ref={ref} className=\"activity\">\n              <Loading size=\"page\" fadeIn=\"none\" />\n            </article>\n          </>\n        );\n\n      activities\n        .filter((activity) => activity.error)\n        .map((activity) => console.error(activity.error));\n      return null;\n    }\n\n    activities = activities\n      .filter((activity) => activity.isSuccess)\n      .map((activity) => activity.data);\n  } else {\n    activities = dataArray.map((x) => x.data);\n  }\n\n  activities.sort((a, b) => a?.activityLightLevel - b?.activityLightLevel);\n\n  return (\n    <article ref={ref} className={classNames(\"activity\", \"success\")}>\n      <ActivityHeader data={activities[0]} name={name} />\n      {activities.map((activity, index) => (\n        <Fragment key={index}>\n          <ActivityDifficulty data={activity} />\n          <ActivityModifiers data={activity} />\n        </Fragment>\n      ))}\n    </article>\n  );\n});\n\nActivity.propTypes = {\n  id: PropTypes.number,\n  dataArray: PropTypes.array,\n  name: PropTypes.string,\n};\n\nActivity.defaultProps = {};\n","import \"./ActivityChampions.scss\";\n\nimport DestinyIcon from \"../DestinyIcon\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"../Tooltip\";\nimport { forwardRef } from \"react\";\n\nconst known_types = [\n  { class: \"Overload\", pattern: /Disruption|Overload/i },\n  { class: \"Unstoppable\", pattern: /Stagger|Unstoppable/i },\n  { class: \"Barrier\", pattern: /Shield-Piercing|Barrier/i },\n];\n\nexport const ActivityChampions = forwardRef(\n  ({ champions, known_champions }, ref) => {\n    if (!champions || champions.length < 1) {\n      return null;\n    }\n\n    const parsed_champions = new Set();\n\n    champions.map((modifier) =>\n      known_types.map(\n        (champion) =>\n          champion.pattern.test(modifier?.displayProperties?.description) &&\n          parsed_champions.add(champion.class)\n      )\n    );\n\n    return (\n      <section ref={ref} className=\"activity-champions\">\n        <h5 className=\"heading\">Champions</h5>\n        <div className=\"champions\">\n          {[...parsed_champions].map((champion, index) => (\n            <Tooltip key={index} contents={`${champion} Champions`}>\n              <div className={\"champion \" + champion} key={index}>\n                <DestinyIcon\n                  icon={[\"champions\", \"modifiers\", champion]}\n                  style={{\n                    filter: `brightness(${known_champions[champion] && \"75%\"})`,\n                  }}\n                />\n                {known_champions[champion] > 0 && (\n                  <span className=\"champion-amount\">\n                    {known_champions[champion]}\n                  </span>\n                )}\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </section>\n    );\n  }\n);\n\nActivityChampions.propTypes = {\n  champions: PropTypes.array,\n  known_champions: PropTypes.object,\n};\n\nActivityChampions.defaultProps = {\n  champions: [],\n  known_champions: {},\n};\n","import \"./Destination.scss\";\n\nimport DestinyIcon from \"../DestinyIcon\";\nimport Loading from \"../Loading\";\nimport { PropTypes } from \"prop-types\";\nimport { forwardRef } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const ActivityDestination = forwardRef(({ id }, ref) => {\n  const { data, error, isLoading } = useQuery([\n    \"DestinyDestinationDefinition\",\n    id,\n  ]);\n\n  if (isLoading) {\n    return (\n      <p ref={ref} className=\"destination\">\n        <DestinyIcon icon={[\"activities\", \"Destination\"]} />\n        <Loading size=\"inline\" />\n      </p>\n    );\n  }\n\n  if (error) {\n    console.error(error);\n    return null;\n  }\n\n  return (\n    <p ref={ref} className=\"destination\">\n      <DestinyIcon icon={[\"activities\", \"Destination\"]} />\n      {data?.displayProperties?.name}\n    </p>\n  );\n});\n\nActivityDestination.propTypes = {\n  id: PropTypes.number,\n};\n\nActivityDestination.defaultProps = {};\n","import PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nexport const ActivityDifficulty = forwardRef(\n  ({ className, data, ...props }, ref) => {\n    const difficulty = data?.selectionScreenDisplayProperties?.name;\n    return (\n      <h2\n        ref={ref}\n        className={classNames(\n          \"activity-difficulty\",\n          difficulty?.toLowerCase(),\n          className\n        )}\n        {...props}\n      >\n        {difficulty}\n      </h2>\n    );\n  }\n);\n\nActivityDifficulty.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n};\n\nActivityDifficulty.defaultProps = {};\n","import { DestinyActivityModeType } from \"bungie-api-ts/destiny2\";\nimport getKeyByValue from \"./getKeyByValue\";\n\nconst known_types = { LostSector: \"Lost Sector\" };\n\nfunction getActivityType(data) {\n  const type = getKeyByValue(\n    DestinyActivityModeType,\n    data?.directActivityModeType\n  );\n  return known_types[type] || type;\n}\n\nexport default getActivityType;\n","import \"./ActivityHeader.scss\";\n\nimport { ActivityDestination } from \".\";\nimport PropTypes from \"prop-types\";\nimport { forwardRef } from \"react\";\nimport getActivityType from \"../../functions/getActivityType\";\nimport { getScreenshot } from \"../../functions/getScreenshot\";\n\nexport const ActivityHeader = forwardRef(({ data, name }, ref) => {\n  name ||= data.displayProperties.name;\n  let type = getActivityType(data);\n\n  if (data.originalDisplayProperties.name === \"Nightfall\") {\n    name = data.originalDisplayProperties.description;\n    type = \"Nightfall\";\n  }\n\n  const screenshot = getScreenshot(data);\n  return (\n    <section\n      ref={ref}\n      className=\"activity-header\"\n      style={{ backgroundImage: `url(${screenshot})` }}\n    >\n      <h5 className=\"activity-type\">{type}</h5>\n      <h1 className=\"activity-name\">{name}</h1>\n      <ActivityDestination id={data.destinationHash} />\n    </section>\n  );\n});\n\nActivityHeader.propTypes = {\n  data: PropTypes.object.isRequired,\n  name: PropTypes.string,\n};\n\nActivityHeader.defaultProps = {};\n","import \"./ActivityModifier.scss\";\n\nimport Img from \"../Img\";\nimport { PropTypes } from \"prop-types\";\nimport Tooltip from \"../Tooltip\";\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nexport const ActivityModifier = forwardRef(({ data }, ref) => {\n  const name = data?.displayProperties?.name;\n  const icon = data?.displayProperties?.icon;\n\n  const description = data?.displayProperties?.description ? (\n    <p>\n      {data?.displayProperties?.description\n        .replace(/(?:[\\s.,]*\\n+[\\s.,]*)+/g, \"; \")\n        .replace(/(\\[Disruption|Stagger\\])/g, \"|$1|\")\n        .split(\"|\")}\n    </p>\n  ) : null;\n\n  if (!(icon && name)) {\n    return null;\n  }\n\n  const known_elements = [\n    { class: \"arc\", pattern: /arc/i },\n    { class: \"solar\", pattern: /solar/i },\n    { class: \"void\", pattern: /void/i },\n    { class: \"stasis\", pattern: /stasis/i },\n  ];\n\n  return (\n    <section ref={ref} className=\"activity-modifier\">\n      <Tooltip contents={name}>\n        <Img\n          className={classNames(\n            \"icon\",\n            known_elements\n              .filter((element) => element.pattern.test(name))\n              .map((element) => element.class)\n          )}\n          src={icon}\n        />\n      </Tooltip>\n      <div className=\"description\">\n        <h6\n          className={classNames(\n            \"heading\",\n            known_elements\n              .filter((element) => element.pattern.test(name))\n              .map((element) => element.class)\n          )}\n        >\n          {name}\n        </h6>\n        {description}\n      </div>\n    </section>\n  );\n});\n\nActivityModifier.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nActivityModifier.defaultProps = {};\n","const known_activities = {\n  0: {\n    known_shields: { Void: 0, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 0, Unstoppable: 0 },\n  },\n  480864726: {\n    known_shields: { Void: 0, Solar: 1, Arc: 2 },\n    known_champions: { Barrier: 3, Overload: 0, Unstoppable: 1 },\n  },\n  480864721: {\n    known_shields: { Void: 0, Solar: 0, Arc: 1 },\n    known_champions: { Barrier: 5, Overload: 0, Unstoppable: 2 },\n  },\n  145221019: {\n    known_shields: { Void: 5, Solar: 0, Arc: 7 },\n    known_champions: { Barrier: 0, Overload: 1, Unstoppable: 2 },\n  },\n  145221020: {\n    known_shields: { Void: 5, Solar: 0, Arc: 4 },\n    known_champions: { Barrier: 0, Overload: 4, Unstoppable: 2 },\n  },\n  3094493720: {\n    known_shields: { Void: 0, Solar: 2, Arc: 4 },\n    known_champions: { Barrier: 3, Overload: 0, Unstoppable: 1 },\n  },\n  3094493727: {\n    known_shields: { Void: 0, Solar: 2, Arc: 2 },\n    known_champions: { Barrier: 3, Overload: 0, Unstoppable: 4 },\n  },\n  2936791996: {\n    known_shields: { Void: 4, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 2, Overload: 2, Unstoppable: 0 },\n  },\n  2936791995: {\n    known_shields: { Void: 3, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 5, Overload: 4, Unstoppable: 0 },\n  },\n  1898610132: {\n    known_shields: { Void: 9, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 2, Unstoppable: 2 },\n  },\n  1898610131: {\n    known_shields: { Void: 10, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 4, Unstoppable: 3 },\n  },\n  660710127: {\n    known_shields: { Void: 1, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 2, Unstoppable: 3 },\n  },\n  660710120: {\n    known_shields: { Void: 1, Solar: 0, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 3, Unstoppable: 4 },\n  },\n  4206916275: {\n    known_shields: { Void: 17, Solar: 2, Arc: 0 },\n    known_champions: { Barrier: 0, Overload: 1, Unstoppable: 3 },\n  },\n  4206916276: {\n    known_shields: { Void: 29, Solar: 2, Arc: 1 },\n    known_champions: { Barrier: 0, Overload: 3, Unstoppable: 5 },\n  },\n  3911969233: {\n    known_shields: { Void: 0, Solar: 0, Arc: 4 },\n    known_champions: { Barrier: 4, Overload: 0, Unstoppable: 3 },\n  },\n  3911969238: {\n    known_shields: { Void: 0, Solar: 0, Arc: 1 },\n    known_champions: { Barrier: 7, Overload: 0, Unstoppable: 3 },\n  },\n  184186581: {\n    known_shields: { Void: 0, Solar: 10, Arc: 0 },\n    known_champions: { Barrier: 3, Overload: 2, Unstoppable: 0 },\n  },\n  184186578: {\n    known_shields: { Void: 0, Solar: 10, Arc: 0 },\n    known_champions: { Barrier: 4, Overload: 6, Unstoppable: 0 },\n  },\n  567131512: {\n    known_shields: { Void: 0, Solar: 8, Arc: 3 },\n    known_champions: { Barrier: 3, Overload: 2, Unstoppable: 0 },\n  },\n  567131519: {\n    known_shields: { Void: 0, Solar: 8, Arc: 3 },\n    known_champions: { Barrier: 4, Overload: 6, Unstoppable: 0 },\n  },\n  3678847129: {\n    known_shields: { Void: 0, Solar: 1, Arc: 2 },\n    known_champions: { Barrier: 0, Overload: 3, Unstoppable: 2 },\n  },\n  3678847134: {\n    known_shields: { Void: 0, Solar: 1, Arc: 2 },\n    known_champions: { Barrier: 0, Overload: 3, Unstoppable: 4 },\n  },\n};\n\nfunction getKnownActivityAmounts(id) {\n  return (\n    known_activities[id] || {\n      known_shields: undefined,\n      known_champions: undefined,\n    }\n  );\n}\n\nexport default getKnownActivityAmounts;\n","import \"./ActivityModifiers.scss\";\n\nimport { ActivityChampions, ActivityModifier, ActivityShields } from \".\";\n\nimport Loading from \"../Loading\";\nimport PropTypes from \"prop-types\";\nimport { forwardRef } from \"react\";\nimport getKnownActivityAmounts from \"../../functions/getKnownActivityAmounts\";\nimport { useQueries } from \"react-query\";\n\nexport const ActivityModifiers = forwardRef(({ data }, ref) => {\n  const modifiers = useQueries(\n    data.modifiers.map((modifier) => {\n      return {\n        queryKey: [\n          \"DestinyActivityModifierDefinition\",\n          modifier.activityModifierHash,\n        ],\n      };\n    })\n  );\n\n  if (!modifiers.every((modifier) => modifier.isSuccess)) {\n    if (modifiers.some((modifier) => modifier.isLoading))\n      return (\n        <section ref={ref} className=\"activity-modifiers\">\n          <Loading size=\"section\" />\n        </section>\n      );\n\n    modifiers\n      .filter((modifier) => modifier.error)\n      .map((modifier) => console.error(modifier.error));\n    return null;\n  }\n\n  const { known_shields, known_champions } = getKnownActivityAmounts(\n    data?.hash\n  );\n\n  const modifier_data = modifiers\n    .filter((modifier) => modifier.isSuccess)\n    .map((modifier) => modifier.data);\n\n  const shields = modifier_data.filter((modifier) =>\n    /shielded foes/i.test(modifier.displayProperties.name)\n  );\n\n  const champions = modifier_data.filter((modifier) =>\n    /champion foes/i.test(modifier.displayProperties.name)\n  );\n\n  const other_modifiers = modifier_data.filter(\n    (modifier) =>\n      !/(shielded|champion) foes|champions: mob| modifiers$/i.test(\n        modifier.displayProperties.name\n      )\n  );\n\n  return (\n    <section ref={ref} className=\"activity-modifiers\">\n      {shields.length > 0 && (\n        <ActivityShields shields={shields} known_shields={known_shields} />\n      )}\n      {champions.length > 0 && (\n        <ActivityChampions\n          champions={champions}\n          known_champions={known_champions}\n        />\n      )}\n      {other_modifiers.length > 0 && (\n        <section className=\"other-modifiers\">\n          <h5 className=\"heading\">Modifiers</h5>\n          <div className=\"modifiers\">\n            {other_modifiers.map((modifier, index) => (\n              <ActivityModifier key={index} data={modifier} />\n            ))}\n          </div>\n        </section>\n      )}\n    </section>\n  );\n});\n\nActivityModifiers.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nActivityModifiers.defaultProps = {};\n","import \"./ActivityShields.scss\";\n\nimport DestinyIcon from \"../DestinyIcon\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"../Tooltip\";\nimport { forwardRef } from \"react\";\n\nconst known_elements = [\n  { name: \"Arc\", pattern: /arc/i },\n  { name: \"Solar\", pattern: /solar/i },\n  { name: \"Void\", pattern: /void/i },\n  { name: \"Stasis\", pattern: /stasis/i },\n];\n\nexport const ActivityShields = forwardRef(({ shields, known_shields }, ref) => {\n  if (!shields || shields.length < 1) {\n    return null;\n  }\n\n  const parsed_shields = new Set();\n\n  shields.map((modifier) =>\n    known_elements.map(\n      (element) =>\n        element.pattern.test(modifier?.displayProperties?.description) &&\n        parsed_shields.add(element.name)\n    )\n  );\n\n  return (\n    <section ref={ref} className=\"activity-shields\">\n      <h5 className=\"heading\">Shields</h5>\n      <div className=\"shields\">\n        {[...parsed_shields].map((shield, index) => (\n          <Tooltip contents={`${shield} Shields`} key={index}>\n            <div className=\"shield\" key={index}>\n              <DestinyIcon icon={[\"elements\", shield]} color={shield} />\n              {known_shields[shield] > 0 && (\n                <span className=\"shield-amount\">{known_shields[shield]}</span>\n              )}\n            </div>\n          </Tooltip>\n        ))}\n      </div>\n    </section>\n  );\n});\n\nActivityShields.propTypes = {\n  shields: PropTypes.array,\n  known_shields: PropTypes.object,\n};\n\nActivityShields.defaultProps = {\n  shields: [],\n  known_shields: {},\n};\n","import { Activity } from \"./Activity\";\nimport { ActivityChampions } from \"./ActivityChampions\";\nimport { ActivityDestination } from \"./ActivityDestination\";\nimport { ActivityDifficulty } from \"./ActivityDifficulty\";\nimport { ActivityHeader } from \"./ActivityHeader\";\nimport { ActivityModifier } from \"./ActivityModifier\";\nimport { ActivityModifiers } from \"./ActivityModifiers\";\nimport { ActivityShields } from \"./ActivityShields\";\n\nexport default Activity;\n\nexport {\n  ActivityDestination,\n  ActivityHeader,\n  ActivityModifiers,\n  ActivityModifier,\n  ActivityChampions,\n  ActivityShields,\n  ActivityDifficulty,\n};\n","import { useQueries, useQuery } from \"react-query\";\n\nimport Activity from \"../../components/Activity/index\";\nimport Card from \"../../components/Card\";\n\nexport default function CurrentNightfall() {\n  const milestone = useQuery(\"Milestones\");\n\n  const activities = milestone?.data?.[1942283261]?.activities || [];\n\n  const nightfalls = useQueries(\n    activities.map((activity) => {\n      return {\n        queryKey: [\"DestinyActivityDefinition\", activity.activityHash],\n      };\n    }),\n    { enabled: !!activities }\n  );\n\n  if (\n    !(\n      milestone.isSuccess &&\n      nightfalls.every((nightfall) => nightfall.isSuccess)\n    )\n  ) {\n    return null;\n  }\n\n  return (\n    <Card\n      title=\"Nightfall\"\n      icon=\"https://www.bungie.net/common/destiny2_content/icons/48dda413d9f412ca2b10fd56a35a2665.png\"\n      customModal\n      modalContent={<Activity dataArray={nightfalls} />}\n    >\n      {nightfalls[0].data.displayProperties.description}\n    </Card>\n  );\n}\n","import \"./LostSector.scss\";\n\nimport { useQueries, useQuery } from \"react-query\";\n\nimport Activity from \"./Activity\";\nimport Loading from \"./Loading\";\nimport { PropTypes } from \"prop-types\";\nimport getActivityType from \"../functions/getActivityType\";\n\nconst activity_type = \"DestinyActivityDefinition\";\n\nexport default function LostSector({ name }) {\n  const {\n    data: search_data,\n    error: search_error,\n    isLoading: search_isLoading,\n  } = useQuery([\"Search\", activity_type, name]);\n\n  const search_results = search_data?.results?.results || [];\n\n  const lost_sectors = useQueries(\n    search_results.map((result) => {\n      return { queryKey: [activity_type, result.hash] };\n    }),\n    { enabled: !!search_results }\n  );\n\n  if (search_isLoading || lost_sectors.some((sector) => sector.isLoading)) {\n    return (\n      <article className=\"lost-sector\">\n        <Loading size=\"page\" fadeIn=\"none\" />\n      </article>\n    );\n  }\n\n  if (search_error || lost_sectors.some((sector) => sector.error)) {\n    search_error && console.error(search_error);\n    lost_sectors.map((sector) => sector.error && console.error(sector.error));\n\n    return (\n      <article className=\"lost-sector\">\n        <h2 className=\"error\">Can't find Lost Sector info...</h2>\n      </article>\n    );\n  }\n\n  const filtered_sectors = lost_sectors.filter(\n    (sector) => getActivityType(sector.data) === \"Lost Sector\"\n  );\n\n  return <Activity dataArray={filtered_sectors} />;\n}\n\nLostSector.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","export default function gcd(a, b) {\n  return !b ? a : gcd(b, a % b);\n}\n\nexport function lcm(a, b) {\n  return (a * b) / gcd(a, b);\n}\n","import CycleCard from \"../../components/CycleCard\";\nimport LostSector from \"../../components/LostSector\";\nimport Modal from \"../../components/Modal\";\nimport { day } from \"../../constants/time\";\nimport { lcm } from \"../../functions/gcd\";\nimport { useMemo } from \"react\";\n\nfunction LostSectorLink({ location }) {\n  return (\n    <Modal\n      triggerContent={\n        <span className=\"a-link\">\n          {location.name} - {location.location}\n        </span>\n      }\n      background=\"https://www.bungie.net/common/destiny2_content/icons/DestinyActivityModeDefinition_7d11acd7d5a3daebc0a0c906452932d6.png\"\n    >\n      <LostSector name={location.name} />\n    </Modal>\n  );\n}\n\nexport default function LostSectors() {\n  const items = useMemo(() => {\n    const locations = [\n      {\n        name: \"K1 Crew Quarters\",\n        location: \"Moon\",\n      },\n      {\n        name: \"K1 Logistics\",\n        location: \"Moon\",\n      },\n      {\n        name: \"Metamorphosis\",\n        location: \"Throne World\",\n      },\n      {\n        name: \"Sepulcher\",\n        location: \"Throne World\",\n      },\n      {\n        name: \"Extraction\",\n        location: \"Throne World\",\n      },\n      {\n        name: \"Veles Labyrinth\",\n        location: \"Cosmodrome\",\n      },\n      {\n        name: \"Exodus Garden A2\",\n        location: \"Cosmodrome\",\n      },\n      {\n        name: \"Aphelion's Rest\",\n        location: \"Dreaming City\",\n      },\n      {\n        name: \"Bay of Drowned Wishes\",\n        location: \"Dreaming City\",\n      },\n      {\n        name: \"Chamber of Starlight\",\n        location: \"Dreaming City\",\n      },\n      {\n        name: \"K1 Revelation\",\n        location: \"Moon\",\n      },\n    ];\n\n    const drops = [\"Arms\", \"Chest\", \"Helmet\", \"Legs\"];\n\n    let items = [];\n\n    do {\n      items.push(\n        <div>\n          <LostSectorLink\n            location={locations[items.length % locations.length]}\n          />\n          {\" (\"}\n          {drops[items.length % drops.length]}\n          {\")\"}\n        </div>\n      );\n    } while (items.length < lcm(drops.length, locations.length));\n\n    return items;\n  }, []);\n\n  return (\n    <CycleCard\n      name=\"Legend & Master Lost Sector\"\n      items={items}\n      start={1653411600 * 1000}\n      period={day}\n      icon=\"https://www.bungie.net/common/destiny2_content/icons/DestinyActivityModeDefinition_7d11acd7d5a3daebc0a0c906452932d6.png\"\n    />\n  );\n}\n","import CycleCard from \"../../components/CycleCard\";\nimport { day } from \"../../constants/time\";\n\nconst items = [\"EDZ\", \"Cosmodrome\", \"Moon\"].map((item) => <div>{item}</div>);\n\nexport default function PsiOpsLegend() {\n  return (\n    <CycleCard\n      name=\"PsiOps Battleground: Legend\"\n      items={items}\n      start={1652115600 * 1000}\n      period={day}\n      icon=\"https://www.bungie.net/common/destiny2_content/icons/b5ca23093632aa939e8209a2ee558106.png\"\n    />\n  );\n}\n","function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function capitalizeSentence(str) {\n  return str.split(\". \").map(capitalize).join(\". \");\n}\n","import { day, second } from \"../../constants/time\";\nimport { formatDate, formatTime } from \"../../functions/formatDateTime\";\nimport { useEffect, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { capitalizeSentence } from \"../../functions/capitalizeSentence\";\nimport { formatDuration } from \"../../functions/formatDuration\";\nimport { isPast } from \"../../functions/isPast\";\nimport { nextTime } from \"../../functions/nextTime\";\n\nexport const TimerCardCountdown = ({\n  timestamp,\n  hasTime,\n  prefix,\n  conditions,\n}) => {\n  const [now, setNow] = useState(Date.now());\n  const [countdown, setCountdown] = useState(formatDuration(timestamp - now));\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(() => Date.now());\n      setCountdown(() => formatDuration(timestamp - now));\n    }, nextTime(30 * second, 0) - Date.now());\n    return () => clearTimeout(timer);\n  }, [now, timestamp]);\n\n  conditions = Array.isArray(conditions) ? conditions : [conditions];\n\n  const checkCondition = (condition) => {\n    if (condition === true) return true;\n\n    if (condition === \"past\") return isPast(timestamp);\n\n    if (condition === \"future\") return !isPast(timestamp);\n\n    if (condition?.when === \"past\") return isPast(condition.timestamp);\n\n    if (condition?.when === \"future\") return !isPast(condition.timestamp);\n  };\n\n  if (!timestamp || !conditions.every(checkCondition)) return null;\n\n  let absolute_time_string;\n  if (Math.abs(timestamp - now) < day) {\n    absolute_time_string = \"at \" + formatTime(timestamp, hasTime);\n  } else {\n    absolute_time_string = \"on \" + formatDate(timestamp, hasTime);\n  }\n\n  return (\n    <p>\n      {capitalizeSentence(\n        `${\n          prefix\n            ? `${\n                Array.isArray(prefix)\n                  ? isPast(timestamp)\n                    ? prefix[1]\n                    : prefix[0]\n                  : prefix\n              } `\n            : \"\"\n        }${countdown ? `${countdown}, ` : \"\"}${absolute_time_string}`\n      )}\n    </p>\n  );\n};\n\nTimerCardCountdown.propTypes = {\n  timestamp: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.instanceOf(Date),\n  ]),\n  hasTime: PropTypes.bool,\n  prefix: PropTypes.string,\n};\n\nTimerCardCountdown.defaultProps = {\n  hasTime: true,\n  conditions: [true],\n};\n","import styled from \"styled-components/macro\";\n\nexport const StyledDescription = styled.p`\n  margin-top: ${(props) => props.theme.lengths.gap};\n`;\n","import { day, hour, month, week, year } from \"../constants/time\";\n\nexport const getPeriodString = (milliseconds) => {\n  if (milliseconds === hour) return \"Hourly\";\n\n  if (milliseconds === day) return \"Daily\";\n\n  if (milliseconds === week) return \"Weekly\";\n\n  if (milliseconds === month) return \"Monrthly\";\n\n  if (milliseconds === year) return \"Yearly\";\n\n  return null;\n};\n","import { StyledDescription } from \"./TimerCardDescriptionStyle\";\nimport { TimerCardCountdown } from \"./TimerCardCountdown\";\nimport { getPeriodString } from \"../../functions/getPeriodString\";\n\nexport const TimerCardDescription = ({ start, end, period, description }) => {\n  return (\n    <>\n      <TimerCardCountdown\n        prefix={start && end && [\"Starts\", \"Started\"]}\n        timestamp={start}\n      />\n      <TimerCardCountdown\n        prefix={start && end && [\"Ends\", \"Ended\"]}\n        timestamp={end}\n      />\n      {getPeriodString(period) && <p>Period: {getPeriodString(period)}</p>}\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </>\n  );\n};\n","import { day, minute, second, year } from \"../../constants/time\";\nimport { forwardRef, useEffect, useState } from \"react\";\n\nimport Card from \"../Card\";\nimport PropTypes from \"prop-types\";\nimport { TimerCardCountdown } from \"./TimerCardCountdown\";\nimport { TimerCardDescription } from \"./TimerCardDescription\";\nimport classNames from \"classnames\";\nimport { isPast } from \"../../functions/isPast\";\nimport { nextTime } from \"../../functions/nextTime\";\nimport { toTime } from \"../../functions/toTime\";\n\nexport const TimerCard = forwardRef(\n  ({ className, description, start, end, period, hasTime, ...props }, ref) => {\n    const [nextEnd, setNextEnd] = useState(nextTime(period, toTime(end)));\n\n    const [nextStart, setNextStart] = useState(() => {\n      let nextStart = nextTime(period, toTime(start));\n      while (period && nextEnd && nextStart > nextEnd) {\n        nextStart -= period;\n      }\n      return nextStart;\n    });\n\n    const [now, setNow] = useState(Date.now());\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setNextEnd(nextTime(period, toTime(nextEnd)));\n        setNow(() => Date.now());\n        setNextStart(() => {\n          let start_temp = nextTime(period, toTime(nextStart));\n          while (period && nextEnd && start_temp >= nextEnd) {\n            start_temp -= period;\n          }\n          return start_temp;\n        });\n      }, nextTime(30 * second, 0) - Date.now());\n      return () => clearTimeout(timer);\n    }, [now, nextStart, nextEnd, period]);\n\n    let is_recurring = !!period;\n\n    let started = false;\n    if (isPast(nextStart)) {\n      started = true;\n    }\n\n    let ended = false;\n    if (\n      isPast(nextEnd) ||\n      (!nextEnd && isPast(nextStart + day)) ||\n      (!is_recurring &&\n        (isPast(nextEnd) || (!nextEnd && isPast(nextStart + day))))\n    ) {\n      ended = true;\n    }\n\n    if (ended) {\n      return null;\n    }\n\n    let target_time = nextStart;\n    if (started && nextEnd) {\n      target_time = nextEnd;\n    }\n\n    let flex_order = target_time / minute;\n    if (!is_recurring) {\n      flex_order -= (10 * year) / minute;\n    }\n\n    return (\n      <Card\n        ref={ref}\n        className={classNames(\"timer-card\", className)}\n        modalContent={\n          <TimerCardDescription\n            start={nextStart}\n            end={nextEnd}\n            period={period}\n            description={description}\n          />\n        }\n        style={{ order: flex_order }}\n        highlight={!!started}\n        {...props}\n      >\n        <TimerCardCountdown\n          prefix={nextStart && nextEnd && \"Starts\"}\n          timestamp={nextStart}\n          conditions=\"future\"\n        />\n        <TimerCardCountdown\n          prefix={nextStart && nextEnd && \"Ends\"}\n          timestamp={nextEnd}\n          conditions={[\"future\", { timestamp: nextStart, when: \"past\" }]}\n        />\n      </Card>\n    );\n  }\n);\n\nTimerCard.propTypes = {\n  className: PropTypes.string,\n  description: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    ),\n  ]),\n  start: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Date),\n  ]),\n  end: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Date),\n  ]),\n  period: PropTypes.number,\n  hasTime: PropTypes.bool,\n};\n\nTimerCard.defaultProps = {\n  hasTime: true,\n};\n","import { TimerCard } from \"./TimerCard\";\n\nexport default TimerCard;\n","import TimerCard from \"../../components/TimerCard\";\nimport { useQuery } from \"react-query\";\n\nconst bungie_root = \"https://bungie.net\";\n\nexport default function Season() {\n  const d2settings = useQuery(\"Settings\");\n\n  const current_season_hash =\n    d2settings?.data?.destiny2CoreSettings?.currentSeasonHash;\n\n  const { isLoading, error, data } = useQuery(\n    [\"DestinySeasonDefinition\", current_season_hash],\n    { enabled: !!current_season_hash }\n  );\n\n  if (d2settings.isLoading || isLoading) {\n    return null;\n  }\n\n  if (d2settings.error || error) {\n    console.error(d2settings.error);\n    return null;\n  }\n\n  return (\n    <TimerCard\n      title={`Season ${data.seasonNumber}: ${data.displayProperties.name}`}\n      description={data.displayProperties.description}\n      start={data.startDate}\n      end={data.endDate}\n      icon={`${bungie_root}${data.displayProperties.icon}`}\n    />\n  );\n}\n","import CycleCard from \"../../components/CycleCard\";\nimport DestinyWeapon from \"../../components/DestinyWeapon\";\nimport { day } from \"../../constants/time\";\n\nconst items = [\n  <DestinyWeapon id=\"2721157927\" name=\"Tarnation\" />,\n  <DestinyWeapon id=\"1399109800\" name=\"Fel Taradiddle\" />,\n  <DestinyWeapon id=\"3865728990\" name=\"Father's Sins\" />,\n  <DestinyWeapon id=\"927567426\" name=\"Come to Pass\" />,\n];\n\nexport default function WellspringWeapons() {\n  return (\n    <CycleCard\n      name=\"Wellspring Weapon\"\n      items={items}\n      start={1648746000 * 1000}\n      period={day}\n      icon=\"https://www.bungie.net/common/destiny2_content/icons/DestinyMilestoneDefinition_feb5aecca544ab023ecf3b74ac8f509b.png\"\n    />\n  );\n}\n","import \"./style.scss\";\n\nimport { currentDay, currentWeek, currentXur, nextXur } from \"@d2api/date\";\nimport { day, hour, week } from \"../../constants/time\";\n\nimport AltarsOfSorrowWeapons from \"./AltarsOfSorrowWeapons\";\nimport Button from \"../../components/Button\";\nimport CurrentNightfall from \"./CurrentNightfall\";\nimport { GiClockwiseRotation } from \"react-icons/gi\";\nimport LostSectors from \"./LostSectors\";\nimport PsiOpsLegend from \"./PsiOpsLegend\";\nimport React from \"react\";\nimport Season from \"./Season\";\nimport TimerCard from \"../../components/TimerCard\";\nimport WellspringWeapons from \"./WellspringWeapons\";\n\nconst loadResets = () => [\n  {\n    title: \"Daily Reset\",\n    start: currentDay().end,\n    period: day,\n    icon: <GiClockwiseRotation />,\n  },\n  {\n    title: \"Weekly Reset\",\n    start: currentWeek().end,\n    period: week,\n    icon: <GiClockwiseRotation />,\n    link: \"https://kyber3000.com/reset\",\n  },\n  {\n    title: \"Weekend Activities\",\n    start: currentXur() ? currentXur().start : nextXur().start,\n    end: currentXur() ? currentXur().end : nextXur().end,\n    period: week,\n    icon: <GiClockwiseRotation />,\n    description: (\n      <ul>\n        <li>\n          <a href=\"https://kyber3000.com/Xur\" target=\"_blank\" rel=\"noreferrer\">\n            Xur\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://kyber3000.com/Trials\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Trials of Osiris\n          </a>\n        </li>\n      </ul>\n    ),\n  },\n];\n\nasync function load(url) {\n  let obj = await (await fetch(url)).json();\n  return obj;\n}\nconst event_promise = load(\n  \"https://raw.githubusercontent.com/CostasAK/d2-timers/events/events.json\"\n);\n\nconst links = [\n  {\n    name: \"Destiny Server and Update Status\",\n    link: \"https://help.bungie.net/hc/en-us/articles/360049199271-Destiny-Server-and-Update-Status\",\n  },\n  {\n    name: \"Bungie Maintenance Notifications\",\n    link: \"https://twitter.com/BungieHelp\",\n  },\n  {\n    name: \"Patch Notes\",\n    link: \"https://www.bungie.net/en/Explore/Category?category=Updates\",\n  },\n];\n\nexport default function Timers() {\n  const [events, setEvents] = React.useState([]);\n  event_promise.then((result) => setEvents(result));\n\n  const [resets, setResets] = React.useState(loadResets());\n\n  const [now, setNow] = React.useState(Date.now());\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setResets(loadResets());\n      setNow(() => Date.now());\n    }, hour - (now % hour));\n    return () => clearTimeout(timer);\n  }, [now]);\n\n  return (\n    <div className=\"timers-wrapper\">\n      <div className=\"timers\">\n        <CurrentNightfall />\n        <WellspringWeapons />\n        <LostSectors />\n        <PsiOpsLegend />\n        <AltarsOfSorrowWeapons />\n        <Season />\n        {events.map((card, index) => (\n          <TimerCard key={index} {...card} />\n        ))}\n        {resets.map((card, index) => (\n          <TimerCard key={index} {...card} />\n        ))}\n      </div>\n      <div className=\"links\">\n        {links.map((link) => (\n          <Button key={link.name} href={link.link}>\n            {link.name}\n          </Button>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["minute","hour","day","week","month","year","formatTime","time","include_time","formatDate","hourParts","Intl","DateTimeFormat","undefined","formatToParts","Date","dayPeriod","dayjs","format","formatDuration","duration","Math","abs","absolute_duration","round","floor","ceil","formatAbsoluteDuration","isPast","now","nextTime","period","offset","remainder","toTime","getTime","CycleCard","name","items","start","icon","useState","setNow","nextCycle","setNextCycle","absoluteTimeString","long","useEffect","timer","setTimeout","clearTimeout","flex_order","current_item_index","length","short_description","countdown","timeString","long_description","className","map","item","index","shifted_index","style","order","Card","title","modalContent","defaultProps","getScreenshot","data","screenshot","pgcrImage","obj","value","Object","keys","find","key","getKeyByValue","DamageType","defaultDamageType","replace","type","itemTypeDisplayName","DestinyAmmunitionType","equippingBlock","ammoType","known_tiers","Legendary","Exotic","tier","sites","url","WeaponLinks","id","site","href","target","rel","Img","src","DestinyWeapon","useQuery","error","isLoading","Loading","size","console","displayProperties","getWeaponType","element","getWeaponElement","inventory","tierTypeName","Modal","triggerContent","DestinyIcon","color","tooltip","contents","backgroundColor","tierToColor","toLowerCase","backgroundImage","AltarsOfSorrowWeapons","Activity","forwardRef","ref","dataArray","ids","concat","activities","useQueries","queryKey","enabled","every","activity","isSuccess","some","fadeIn","filter","x","sort","a","b","activityLightLevel","classNames","Fragment","ActivityDifficulty","known_types","class","pattern","ActivityChampions","champions","known_champions","parsed_champions","Set","modifier","champion","test","description","add","Tooltip","ActivityDestination","props","difficulty","selectionScreenDisplayProperties","LostSector","DestinyActivityModeType","directActivityModeType","ActivityHeader","getActivityType","originalDisplayProperties","destinationHash","ActivityModifier","split","known_elements","known_activities","known_shields","Void","Solar","Arc","Barrier","Overload","Unstoppable","ActivityModifiers","modifiers","activityModifierHash","getKnownActivityAmounts","hash","modifier_data","shields","other_modifiers","ActivityShields","parsed_shields","shield","CurrentNightfall","milestone","nightfalls","activityHash","nightfall","customModal","activity_type","search_data","search_error","search_isLoading","search_results","results","lost_sectors","result","sector","filtered_sectors","gcd","lcm","LostSectorLink","location","background","LostSectors","useMemo","locations","drops","push","PsiOpsLegend","capitalize","str","charAt","toUpperCase","slice","TimerCardCountdown","timestamp","hasTime","prefix","conditions","setCountdown","Array","isArray","absolute_time_string","condition","when","join","StyledDescription","styled","theme","lengths","gap","getPeriodString","milliseconds","TimerCardDescription","end","TimerCard","nextEnd","setNextEnd","nextStart","setNextStart","start_temp","is_recurring","started","ended","target_time","highlight","Season","d2settings","current_season_hash","destiny2CoreSettings","currentSeasonHash","seasonNumber","startDate","endDate","WellspringWeapons","loadResets","currentDay","currentWeek","link","currentXur","nextXur","load","fetch","json","event_promise","links","Timers","React","events","setEvents","then","resets","setResets","card","Button"],"sourceRoot":""}