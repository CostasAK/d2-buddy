{"version":3,"file":"static/js/588.1f49c017.chunk.js","mappings":"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","sources":["components/Card/CardInner.jsx","components/Card/CardModal.jsx","components/Card/CardOuter.jsx","components/Card/Card.jsx","components/Card/index.js","components/DestinyIcon/index.js","components/Img/Img.jsx","components/Modal.jsx","components/Tooltip.jsx","components/Masonry.jsx","pages/Links/index.jsx"],"sourcesContent":["import { cloneElement, isValidElement, useMemo } from \"react\";\n\nimport Img from \"../Img\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nexport const CardInner = ({ children, title, titleRule, icon }) => {\n  const icon_element = useMemo(() => {\n    if (!icon) return null;\n\n    if (isValidElement(icon))\n      return cloneElement(icon, {\n        className: classNames(\"icon\", icon.props.className),\n      });\n\n    return <Img className=\"icon\" src={icon} />;\n  }, [icon]);\n\n  return (\n    <>\n      {icon_element && icon_element}\n      {title && (\n        <h4 className={classNames(\"title\", { \"title-rule\": titleRule })}>\n          {title}\n        </h4>\n      )}\n      {children && <section className=\"card-content\">{children}</section>}\n    </>\n  );\n};\n\nCardInner.propTypes = {\n  title: PropTypes.string,\n  titleRule: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nCardInner.defaultProps = {\n  titleRule: false,\n};\n","import Modal from \"../Modal\";\nimport PropTypes from \"prop-types\";\nimport { forwardRef } from \"react\";\n\nexport const CardModal = forwardRef(\n  (\n    { children, className, modalContent, customModal, title, icon, ...props },\n    ref\n  ) => {\n    if (!modalContent) return children;\n\n    return (\n      <Modal triggerContent={children} className={className} background={icon}>\n        {customModal ? (\n          modalContent\n        ) : (\n          <article ref={ref} className=\"modal-text\" {...props}>\n            {title && <h1 className=\"title\">{title}</h1>}\n            <section className=\"modal-content\">{modalContent}</section>\n          </article>\n        )}\n      </Modal>\n    );\n  }\n);\n\nCardModal.propTypes = {\n  className: PropTypes.string,\n  modalContent: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  title: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  customModal: PropTypes.bool,\n};\n\nCardModal.defaultProps = {\n  customModal: false,\n};\n","import { PropTypes } from \"prop-types\";\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nexport const CardOuter = forwardRef(\n  ({ children, className, hasModal, link, ...props }, ref) => {\n    const class_name = classNames(\n      \"card\",\n      { clickable: hasModal || link },\n      className\n    );\n\n    if (hasModal)\n      return (\n        <article ref={ref} className={class_name} {...props}>\n          {children}\n        </article>\n      );\n\n    if (link)\n      return link.startsWith(\"steam://\") ? (\n        <a ref={ref} className={class_name} href={link} {...props}>\n          {children}\n        </a>\n      ) : (\n        <a\n          ref={ref}\n          className={class_name}\n          href={link}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          {...props}\n        >\n          {children}\n        </a>\n      );\n\n    return (\n      <article ref={ref} className={class_name} {...props}>\n        {children}\n      </article>\n    );\n  }\n);\n\nCardOuter.propTypes = {\n  className: PropTypes.string,\n  hasModal: PropTypes.bool,\n  link: PropTypes.string,\n};\n","import \"./Card.scss\";\n\nimport { CardInner } from \"./CardInner\";\nimport { CardModal } from \"./CardModal\";\nimport { CardOuter } from \"./CardOuter\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nexport const Card = forwardRef(\n  (\n    {\n      title,\n      titleRule,\n      cardContent,\n      modalContent,\n      customModal,\n      link,\n      icon,\n      className,\n      floatIcon,\n      order,\n    },\n    ref\n  ) => (\n    <CardModal\n      className={className}\n      modalContent={modalContent}\n      title={title}\n      icon={icon}\n      customModal={customModal}\n    >\n      <CardOuter\n        className={classNames(className, {\n          \"floating-icon\": floatIcon,\n          \"side-icon\": !floatIcon && icon,\n        })}\n        hasModal={!!modalContent}\n        link={link}\n        style={{ order }}\n      >\n        <CardInner\n          icon={icon}\n          title={title}\n          titleRule={titleRule === undefined ? !floatIcon : titleRule}\n        >\n          {cardContent}\n        </CardInner>\n      </CardOuter>\n    </CardModal>\n  )\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  titleRule: PropTypes.bool,\n  cardContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  modalContent: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  link: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  floatIcon: PropTypes.bool,\n  customModal: PropTypes.bool,\n};\n\nCard.defaultProps = {\n  floatIcon: false,\n  customModal: false,\n};\n","import { Card } from \"./Card\";\n\nexport default Card;\n","import \"./style.scss\";\n\nimport Img from \"../Img\";\nimport Tooltip from \"../Tooltip\";\n\nconst font_symbols = {\n  weapons: {\n    \"Combat Bow\": { symbol: \"\", name: \"Bow\" },\n    \"Auto Rifle\": { symbol: \"\", name: \"Auto Rifle\" },\n    \"Pulse Rifle\": { symbol: \"\", name: \"Pulse Rifle\" },\n    \"Scout Rifle\": { symbol: \"\", name: \"Scout Rifle\" },\n    \"Hand Cannon\": { symbol: \"\", name: \"Hand Cannon\" },\n    \"Submachine Gun\": { symbol: \"\", name: \"Submachine Gun\" },\n    Sidearm: { symbol: \"\", name: \"Sidearm\" },\n    Shotgun: { symbol: \"\", name: \"Shotgun\" },\n    \"Sniper Rifle\": { symbol: \"\", name: \"Sniper Rifle\" },\n    \"Fusion Rifle\": { symbol: \"\", name: \"Fusion Rifle\" },\n    \"Grenade Launcher\": { symbol: \"\", name: \"Grenade Launcher\" },\n    Glaive: { symbol: \"\", name: \"Glaive\" },\n    \"Rocket Launcher\": { symbol: \"\", name: \"Rocket Launcher\" },\n    \"Heavy Grenade Launcher\": { symbol: \"\", name: \"Heavy Grenade Launcher\" },\n    \"Linear Fusion Rifle\": { symbol: \"\", name: \"Linear Fusion Rifle\" },\n    Sword: { symbol: \"\", name: \"Sword\" },\n    \"Machine Gun\": { symbol: \"\", name: \"Machine Gun\" },\n    \"Trace Rifle\": { symbol: \"\", name: \"Trace Rifle\" },\n  },\n  elements: {\n    Kinetic: { symbol: \"\", name: \"Kinetic\" },\n    Void: { symbol: \"\", name: \"Void\" },\n    Solar: { symbol: \"\", name: \"Solar\" },\n    Arc: { symbol: \"\", name: \"Arc\" },\n    Stasis: { symbol: \"\", name: \"Stasis\" },\n  },\n  activities: {\n    LostSector: { symbol: \"\", name: \"Lost Sector\" },\n    Destination: {\n      symbol: (\n        <Img\n          src={\n            \"https://www.bungie.net/common/destiny2_content/icons/c60303e278aa5fc566a04e98c3d8024c.png\"\n          }\n          style={{\n            aspectRatio: \"1 / 1\",\n            maxWidth: \"96px\",\n            maxHeight: \"96px\",\n            height: \"1.5em\",\n            lineHeight: \"1\",\n          }}\n        />\n      ),\n      name: \"Destination\",\n    },\n  },\n  champions: {\n    modifiers: {\n      Overload: {\n        symbol: (\n          <Img\n            src={\n              \"https://bungie.net/common/destiny2_content/icons/c4d9c4f1ec3167e272286bb155dc15f4.png\"\n            }\n            style={{\n              aspectRatio: \"1 / 1\",\n              maxWidth: \"60px\",\n              maxHeight: \"60px\",\n              height: \"1.5em\",\n              lineHeight: \"1\",\n            }}\n          />\n        ),\n        name: \"Overload Champions\",\n      },\n      Unstoppable: {\n        symbol: (\n          <Img\n            src={\n              \"https://bungie.net/common/destiny2_content/icons/0e40371c49f0beac97e5fd9dc2ea9348.png\"\n            }\n            style={{\n              aspectRatio: \"1 / 1\",\n              maxWidth: \"60px\",\n              maxHeight: \"60px\",\n              height: \"1.5em\",\n              lineHeight: \"1\",\n            }}\n          />\n        ),\n        name: \"Unstoppable Champions\",\n      },\n      Barrier: {\n        symbol: (\n          <Img\n            src={\n              \"https://bungie.net/common/destiny2_content/icons/2ac9bcf4a961c3b3e31da7b76a5a87f9.png\"\n            }\n            style={{\n              aspectRatio: \"1 / 1\",\n              maxWidth: \"60px\",\n              maxHeight: \"60px\",\n              height: \"1.5em\",\n              lineHeight: \"1\",\n            }}\n          />\n        ),\n        name: \"Barrier Champions\",\n      },\n    },\n  },\n  controllers: {\n    playstation: {\n      Cross: { symbol: \"\", name: \"Cross\" },\n    },\n  },\n};\n\nconst known_elements = [\"Kinetic\", \"Arc\", \"Solar\", \"Void\", \"Stasis\"];\nconst known_colors = [...known_elements];\n\nfunction DestinyIcon({ icon, color, style, className, onClick, tooltip }) {\n  try {\n    const font_symbol = icon.reduce(\n      (previous, current) => previous[current],\n      font_symbols\n    );\n\n    return (\n      <Tooltip contents={tooltip}>\n        <span\n          className={\n            \"destiny-icon \" +\n            icon.join(\" \") +\n            \" \" +\n            (known_colors.includes(color) ? color?.toLowerCase() : \"\") +\n            \" \" +\n            (className ? className : \"\")\n          }\n          style={style}\n          onClick={onClick}\n        >\n          {font_symbol.symbol}\n        </span>\n      </Tooltip>\n    );\n  } catch (e) {\n    console.warn(`Unknown Destiny icon: ${icon}. ${e}`);\n    return null;\n  }\n}\n\nexport default DestinyIcon;\n","import PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nconst bungie_root_path = \"https://bungie.net\";\n\nexport const Img = forwardRef(({ className, src, alt, ...props }, ref) => {\n  return (\n    <img\n      ref={ref}\n      className={classNames(className)}\n      src={/^\\/[\\w\\d]/.test(src) ? `${bungie_root_path}${src}` : src}\n      alt={alt || \"\"}\n      {...props}\n    />\n  );\n});\n\nImg.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nImg.defaultProps = {};\n","import \"./Modal.scss\";\n\nimport {\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\n\nimport DestinyIcon from \"./DestinyIcon\";\nimport Measure from \"react-measure\";\nimport { PropTypes } from \"prop-types\";\nimport ReactModal from \"react-modal\";\nimport SimpleBarReact from \"simplebar-react\";\nimport Tooltip from \"./Tooltip\";\n\nexport default function Modal({\n  triggerContent,\n  className,\n  tooltip,\n  background,\n  children,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [innerWidth, setInnerWidth] = useState(0);\n\n  const cloned_trigger_content = useMemo(\n    () =>\n      isValidElement(triggerContent)\n        ? cloneElement(triggerContent, { onClick: () => setIsOpen(true) })\n        : triggerContent,\n    [triggerContent]\n  );\n\n  const modal = useCallback(\n    (isOpen, width) => (\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={() => setIsOpen(false)}\n        className={\"modal \" + (className ? className : \"\")}\n        overlayClassName=\"modal-overlay\"\n        closeTimeoutMS={250}\n        appElement={document.getElementById(\"root\")}\n        style={\n          width\n            ? {\n                content: { width: width + 2 },\n              }\n            : {}\n        }\n      >\n        <DestinyIcon\n          icon={[\"controllers\", \"playstation\", \"Cross\"]}\n          className=\"close\"\n          onClick={() => setIsOpen(false)}\n          tooltip=\"Close Pop-up\"\n        />\n        <div\n          className=\"background\"\n          style={{ backgroundImage: `url(${background})` }}\n        />\n        <SimpleBarReact className=\"modal-scroll\">\n          <Measure\n            bounds\n            onResize={(contentRect) => {\n              setInnerWidth(contentRect.bounds.width);\n            }}\n          >\n            {({ measureRef: innerRef }) => (\n              <div ref={innerRef} className=\"modal-inner\">\n                {children}\n              </div>\n            )}\n          </Measure>\n        </SimpleBarReact>\n      </ReactModal>\n    ),\n    [background, children, className]\n  );\n\n  return (\n    <>\n      {tooltip ? (\n        <Tooltip {...tooltip}>{cloned_trigger_content}</Tooltip>\n      ) : (\n        cloned_trigger_content\n      )}\n      {modal(isOpen, innerWidth)}\n    </>\n  );\n}\n\nModal.propTypes = {\n  triggerContent: PropTypes.element,\n  className: PropTypes.string,\n};\n","import \"./Tooltip.scss\";\n\nimport { cloneElement, isValidElement, useMemo, useState } from \"react\";\n\nimport { usePopper } from \"react-popper\";\n\nfunction RenderTooltip({ trigger, backgroundColor, children }) {\n  const [popperElement, setPopperElement] = useState(null);\n  const [arrowElement, setArrowElement] = useState(null);\n\n  const { styles, attributes } = usePopper(trigger, popperElement, {\n    modifiers: [\n      { name: \"arrow\", options: { element: arrowElement } },\n      { name: \"offset\", options: { offset: [0, 8] } },\n    ],\n  });\n  return (\n    <div\n      className=\"popper\"\n      ref={setPopperElement}\n      style={{ ...styles.popper, backgroundColor }}\n      {...attributes.popper}\n    >\n      {children}\n      <div\n        className=\"popper-arrow\"\n        ref={setArrowElement}\n        style={styles.arrow}\n      />\n    </div>\n  );\n}\n\nexport default function Tooltip({ contents, backgroundColor, children }) {\n  const [referenceElement, setReferenceElement] = useState(null);\n  const [shouldRender, setShouldRender] = useState(false);\n\n  const cloned_trigger_content = useMemo(\n    () =>\n      contents ? (\n        isValidElement(children) ? (\n          cloneElement(children, {\n            ref: setReferenceElement,\n            onMouseOver: () => setShouldRender(true),\n            onMouseOut: () => setShouldRender(false),\n            className: children.props.className + \" popper-content\",\n          })\n        ) : (\n          <div ref={setReferenceElement} className=\"popper-content\">\n            {children}\n          </div>\n        )\n      ) : (\n        children\n      ),\n    [children, contents]\n  );\n\n  return (\n    <>\n      {cloned_trigger_content}\n\n      {shouldRender && (\n        <RenderTooltip\n          trigger={referenceElement}\n          backgroundColor={backgroundColor}\n        >\n          {contents}\n        </RenderTooltip>\n      )}\n    </>\n  );\n}\n","import Measure from \"react-measure\";\nimport { useState } from \"react\";\n\nfunction MasonryItem({ element, rowGap }) {\n  const [height, setHeight] = useState(0);\n\n  return (\n    <Measure\n      scroll\n      onResize={(contentRect) => {\n        setHeight(contentRect.scroll.height);\n      }}\n    >\n      {({ measureRef }) => (\n        <div\n          ref={measureRef}\n          className=\"masonry-item\"\n          style={{\n            gridRowEnd: \"span \" + (height + rowGap),\n            display: \"inline-block\",\n            height: \"max-content\",\n            alignItems: \"start\",\n          }}\n        >\n          {element}\n        </div>\n      )}\n    </Measure>\n  );\n}\n\nexport default function Masonry({ rowGap = 7, className, children }) {\n  return (\n    <div\n      className={\"masonry \" + (className || \"\")}\n      style={{\n        display: \"grid\",\n        gridAutoRows: \"1px\",\n        gridAutoFlow: \"row dense\",\n        rowGap: \"0\",\n        marginBottom: `-${rowGap}px`,\n      }}\n    >\n      {children.map((child, index) => (\n        <MasonryItem key={index} element={child} rowGap={rowGap} />\n      ))}\n    </div>\n  );\n}\n","import \"./style.scss\";\n\nimport Card from \"../../components/Card\";\nimport Masonry from \"../../components/Masonry\";\nimport blueberries_logo from \"./assets/blueberries.gg.jpg\";\n\nconst links = [\n  {\n    title: \"Destiny Item Manager\",\n    link: \"https://app.destinyitemmanager.com/\",\n    description:\n      \"Great for managing your vault and loadouts. Can also track triumphs and look up vendors.\",\n    logo: \"https://crowdin-static.downloads.crowdin.com/images/project-logo/285312/small/6ce19d53988be6a3140c7a0646dad0de73.png\",\n  },\n  {\n    title: \"Braytech\",\n    link: \"https://bray.tech/\",\n    description:\n      \"Focusses on tracking weeklies, checklists, challenges, triumphs, quests and activities.\",\n    logo: \"https://bray.tech/static/images/icons/icon-192.png\",\n  },\n  {\n    title: \"DeerTrivia's Daily Optimized Bounties\",\n    link: \"https://www.reddit.com/search?q=author%3ADeerTrivia%20Optimized%20Bounties&t=week&sort=new\",\n    description:\n      \"DeerTrivia makes a list of bounties every day that are efficiently completable and how you can complete them easiest.\",\n    logo: \"https://styles.redditmedia.com/t5_bzs62/styles/profileIcon_rod7enjmt3751.jpg?width=256&height=256&crop=256:256,smart&s=e31e50dc38e85ea18681a82b9fb68addb733d823\",\n  },\n  {\n    title: \"Vault Analyzer\",\n    description:\n      \"TMMania's DIM Search Gallery, to find junk in your vault and good things at vendors.\",\n    link: \"https://docs.google.com/spreadsheets/d/1fzn1iLI91aJOe3Wj9Vp7x41qIujjW1tRtoTLB6V_X7E/edit?usp=sharing\",\n    logo: \"https://avatars.githubusercontent.com/u/74565769?v=4\",\n  },\n  {\n    title: \"Ishtar Collective\",\n    link: \"https://www.ishtar-collective.net/\",\n    description: \"Here you can find all the organised lore entries of Destiny.\",\n    logo: \"https://yt3.ggpht.com/a/AGF-l7_7ERZ7Bl1YysHY2v-6Jyv5PT0q7SLSPRbhSA=s900-c-k-c0xffffffff-no-rj-mo\",\n  },\n  {\n    title: \"Blueberries.gg\",\n    link: \"https://www.blueberries.gg/\",\n    description:\n      \"Offers 'Getting Started' type guides such as the Leveling Guide (which includes the power caps of the current season), and lists of recommended weapons, armor, etc.\",\n    logo: blueberries_logo,\n  },\n  {\n    title: \"Light.gg\",\n    link: \"https://www.light.gg/\",\n    description:\n      \"Look up weapons in the game and all the perks they can roll with. Has ratings for weapons and perk combinations and will rate the rolls in your vault for you as well when you log in. Do note that most of the time these rating will be automated and therefore might not be the most useful in finding a god roll, but it's a start.\",\n    logo: \"https://www.light.gg/Content/Images/new-icon.png\",\n  },\n];\n\nexport default function Links(props) {\n  return (\n    <div className=\"links-page\">\n      <p className=\"description\">\n        I have no affiliation with the sites listed. I just think they're great.\n      </p>\n      <Masonry className=\"links\">\n        {links.map((link) => (\n          <Card\n            key={link.title}\n            link={link.link}\n            icon={link.logo}\n            title={link.title}\n            cardContent={link.description}\n            className=\"link\"\n            floatIcon\n          />\n        ))}\n      </Masonry>\n    </div>\n  );\n}\n"],"names":["CardInner","children","title","titleRule","icon","icon_element","useMemo","isValidElement","cloneElement","className","classNames","props","Img","src","defaultProps","CardModal","forwardRef","ref","modalContent","customModal","Modal","triggerContent","background","CardOuter","hasModal","link","class_name","clickable","startsWith","href","target","rel","Card","cardContent","floatIcon","order","style","undefined","propTypes","PropTypes","font_symbols","weapons","symbol","name","Sidearm","Shotgun","Glaive","Sword","elements","Kinetic","Void","Solar","Arc","Stasis","activities","LostSector","Destination","aspectRatio","maxWidth","maxHeight","height","lineHeight","champions","modifiers","Overload","Unstoppable","Barrier","controllers","playstation","Cross","known_colors","color","onClick","tooltip","font_symbol","reduce","previous","current","Tooltip","contents","join","includes","toLowerCase","e","console","warn","alt","test","useState","isOpen","setIsOpen","innerWidth","setInnerWidth","cloned_trigger_content","modal","useCallback","width","onRequestClose","overlayClassName","closeTimeoutMS","appElement","document","getElementById","content","DestinyIcon","backgroundImage","bounds","onResize","contentRect","innerRef","measureRef","RenderTooltip","trigger","backgroundColor","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","options","element","offset","styles","attributes","popper","arrow","referenceElement","setReferenceElement","shouldRender","setShouldRender","onMouseOver","onMouseOut","MasonryItem","rowGap","setHeight","scroll","gridRowEnd","display","alignItems","Masonry","gridAutoRows","gridAutoFlow","marginBottom","map","child","index","links","description","logo","Links"],"sourceRoot":""}